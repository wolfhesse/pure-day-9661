{"ts":1352170548099,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var express = require('express');\nvar app = module.exports = express.createServer();\n\napp.configure(function(){\n  app.use(express.bodyParser());\n  app.use(express.methodOverride());\n  app.use(app.router);\n  app.use(express.static(__dirname + '/public'));\n});\n\napp.configure('development', function(){\n  app.use(express.errorHandler({ dumpExceptions: true, showStack: true }));\n});\n\napp.configure('production', function(){\n  app.use(express.errorHandler());\n});\n\nvar port = process.env.PORT || 3000;\napp.listen(port, function() {\n  console.log(\"Listening on \" + port);\n});\n\nvar io = require('socket.io').listen(app);\n\nvar usernames = {};\n\nio.sockets.on('connection', function (socket) {\n\n\t// when the client emits 'sendchat', this listens and executes\n\tsocket.on('sendchat', function (data) {\n\t\t// we tell the client to execute 'updatechat' with 2 parameters\n\t\tio.sockets.emit('updatechat', socket.username, data);\n\t});\n\n\t// when the client emits 'adduser', this listens and executes\n\tsocket.on('adduser', function(username){\n\t\t// we store the username in the socket session for this client\n\t\tsocket.username = username;\n\t\t// add the client's username to the global list\n\t\tusernames[username] = username;\n\t\t// echo to client they've connected\n\t\tsocket.emit('updatechat', 'SERVER', 'you have connected');\n\t\t// echo globally (all clients) that a person has connected\n\t\tsocket.broadcast.emit('updatechat', 'SERVER', username + ' has connected');\n\t\t// update the list of users in chat, client-side\n\t\tio.sockets.emit('updateusers', usernames);\n\t});\n\n\t// when the user disconnects.. perform this\n\tsocket.on('disconnect', function(){\n\t\t// remove the username from global usernames list\n\t\tdelete usernames[socket.username];\n\t\t// update list of users in chat, client-side\n\t\tio.sockets.emit('updateusers', usernames);\n\t\t// echo globally that this client has left\n\t\tsocket.broadcast.emit('updatechat', 'SERVER', socket.username + ' has disconnected');\n\t});\n});\n\napp.get('/', function (req, res) {\n  res.sendfile(__dirname + '/index.html');\n});"]],"start1":0,"start2":0,"length1":0,"length2":2031}]],"length":2031}
